[
  {
    "id": 1,
    "task": "find all methods",
    "prompt": "Generate a complete CPGQL query. Examples:\ncpg.method.name.l\ncpg.call.name.l\ncpg.method.parameter.name.l\n\nTask: Find all methods\nQuery:",
    "query": "cpg. method . name  \""
  },
  {
    "id": 2,
    "task": "find method named main",
    "prompt": "Generate a complete CPGQL query. Examples:\ncpg.method.name(\"main\").l\ncpg.method.name(\"execute\").l\ncpg.call.name(\"strcpy\").l\n\nTask: Find method named main\nQuery:",
    "query": "cpg. method . name ( \""
  },
  {
    "id": 3,
    "task": "find callers of strcpy",
    "prompt": "Generate a complete CPGQL query. Examples:\ncpg.method.name(\"strcpy\").caller.name.l\ncpg.method.name(\"memcpy\").caller.name.l\ncpg.call.name(\"malloc\").caller.name.l\n\nTask: Find callers of strcpy\nQuery:",
    "query": "cpg. call . name ( \""
  },
  {
    "id": 4,
    "task": "find memcpy arguments",
    "prompt": "Generate a complete CPGQL query. Examples:\ncpg.call.name(\"memcpy\").argument.code.l\ncpg.call.name(\"strcpy\").argument.code.l\ncpg.call.name(\"sprintf\").argument.code.l\n\nTask: Find memcpy arguments\nQuery:",
    "query": "cpg. call . name (\"\""
  },
  {
    "id": 5,
    "task": "find method parameters",
    "prompt": "Generate a complete CPGQL query. Examples:\ncpg.method.parameter.name.l\ncpg.method.parameter.typeFullName.l\ncpg.method.filter(_.isPublic).parameter.name.l\n\nTask: Find method parameters\nQuery:",
    "query": "cpg. method . parameter . name   . language ( \"c"
  }
]