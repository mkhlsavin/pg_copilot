{
  "statistics": {
    "total": 10,
    "valid_raw": 0,
    "valid_cleaned": 6,
    "simple_queries": 7,
    "complex_queries": 3,
    "avg_length": 91,
    "max_length": 718
  },
  "queries": [
    {
      "id": 1,
      "prompt": "to find all methods",
      "example": "cpg.method.name.l",
      "original_query": "cpg. method . name l  c",
      "cleaned_query": "cpg.method.name.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive"
      ],
      "issues_cleaned": [],
      "complexity": 3,
      "length": 17
    },
    {
      "id": 2,
      "prompt": "to list all function calls",
      "example": "cpg.call.name.l",
      "original_query": "cpg. call . name l  c",
      "cleaned_query": "cpg.call.name.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive"
      ],
      "issues_cleaned": [],
      "complexity": 3,
      "length": 15
    },
    {
      "id": 3,
      "prompt": "to find methods named 'main'",
      "example": "cpg.method.name(\"main\").l",
      "original_query": "cpg. method . name (\"",
      "cleaned_query": "cpg.method.name(.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive",
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "issues_cleaned": [],
      "complexity": 3,
      "length": 18
    },
    {
      "id": 4,
      "prompt": "to find calls to strcpy",
      "example": "cpg.call.name(\"strcpy\").l",
      "original_query": "cpg. call . name (\"",
      "cleaned_query": "cpg.call.name(.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive",
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "issues_cleaned": [],
      "complexity": 3,
      "length": 16
    },
    {
      "id": 5,
      "prompt": "to find callers of memcpy",
      "example": "cpg.method.name(\"memcpy\").caller.name.l",
      "original_query": "cpg. method . name (\" c",
      "cleaned_query": "cpg.method.name(\".l",
      "is_valid_raw": false,
      "is_valid_cleaned": false,
      "issues_raw": [
        "Missing execution directive",
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "issues_cleaned": [
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "complexity": 3,
      "length": 19
    },
    {
      "id": 6,
      "prompt": "to find method signatures",
      "example": "cpg.method.signature.l",
      "original_query": "cpg. method . signature l . callee . name \" . clone\"",
      "cleaned_query": "cpg.method.signature l.callee.name \".clone.l",
      "is_valid_raw": false,
      "is_valid_cleaned": false,
      "issues_raw": [
        "Missing execution directive"
      ],
      "issues_cleaned": [
        "Unmatched quotes"
      ],
      "complexity": 6,
      "length": 44
    },
    {
      "id": 7,
      "prompt": "to find vulnerable buffer operations",
      "example": "cpg.call.name(\"memcpy\").argument.code.l",
      "original_query": "cpg. call . name (\" v",
      "cleaned_query": "cpg.call.name(\" v.l",
      "is_valid_raw": false,
      "is_valid_cleaned": false,
      "issues_raw": [
        "Missing execution directive",
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "issues_cleaned": [
        "Incomplete string literal",
        "Unmatched quotes"
      ],
      "complexity": 3,
      "length": 19
    },
    {
      "id": 8,
      "prompt": "for control flow analysis",
      "example": "cpg.method.controlledBy.code.l",
      "original_query": "cpg. method . controlledBy . code l . call . source . location . file . name l . call . source . location . lineNumber l . call . source . location . start . lineNumber l . call . source . location . start . lineNumber l . call . source . location . start . lineNumber l . controlStructure . typeFullName l . method . parameter . typeFullName l . method . returns . typeFullName l . method . isStatic . method . isPublic . method . name l . method . fullName l . method . signature l . method . typeFullName l . method . location . file . name l . method . location . lineNumber l . method . location . start . lineNumber l . method . location . start . lineNumber l . method . location . start . lineNumber l . controlStructure . typeFullName l . method . parameter . typeFullName l . method . returns . typeFullName l . method . isStatic . method . isPublic . method . name",
      "cleaned_query": "cpg.method.controlledBy.code l.call.source.location.file.name l.call.source.location.lineNumber l.call.source.location.start.lineNumber l.call.source.location.start.lineNumber l.call.source.location.start.lineNumber l.controlStructure.typeFullName l.method.parameter.typeFullName l.method.returns.typeFullName l.method.isStatic.method.isPublic.method.name l.method.fullName l.method.signature l.method.typeFullName l.method.location.file.name l.method.location.lineNumber l.method.location.start.lineNumber l.method.location.start.lineNumber l.method.location.start.lineNumber l.controlStructure.typeFullName l.method.parameter.typeFullName l.method.returns.typeFullName l.method.isStatic.method.isPublic.method.name.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive"
      ],
      "issues_cleaned": [],
      "complexity": 81,
      "length": 718
    },
    {
      "id": 9,
      "prompt": "to find method parameters",
      "example": "cpg.method.parameter.name.l",
      "original_query": "cpg. method . parameter . name l  c",
      "cleaned_query": "cpg.method.parameter.name.l",
      "is_valid_raw": false,
      "is_valid_cleaned": true,
      "issues_raw": [
        "Missing execution directive"
      ],
      "issues_cleaned": [],
      "complexity": 4,
      "length": 27
    },
    {
      "id": 10,
      "prompt": "to analyze data flow",
      "example": "cpg.method.name.toList",
      "original_query": "cpg. method . name  \" c",
      "cleaned_query": "cpg.method.name \".l",
      "is_valid_raw": false,
      "is_valid_cleaned": false,
      "issues_raw": [
        "Missing execution directive",
        "Unmatched quotes"
      ],
      "issues_cleaned": [
        "Unmatched quotes"
      ],
      "complexity": 3,
      "length": 19
    }
  ]
}