[
  {
    "name": "Parameter to Identifier Flow",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres587\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List(\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"relation\",\n    \"atLine\" -> \"1571\",\n    \"flowsToIdentifier\" -> \"relation\",\n    \"paramType\" -> \"Relation\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"snapshot\",\n    \"atLine\" -> \"1620\",\n    \"flowsToIdentifier\" -> \"snapshot\",\n    \"paramType\" -> \"Snapshot\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1606\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1589\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1615\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1620\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1561\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1614\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  ),\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"parameter\" -> \"tuple\",\n    \"atLine\" -> \"1613\",\n    \"flowsToIdentifier\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"inMethod\" -> \"heap_fetch\"\n  )\n)\r\n",
    "execution_time": 12.39560341835022
  },
  {
    "name": "Parameter to Call Argument Flow",
    "status": "failed",
    "error": "\u001b[31m\u001b[31m-- [E008] Not Found Error: -----------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m4 |\u001b[0m            \u001b[33mcase\u001b[0m arg: io.shiftleft.codepropertygraph.generated.nodes.Argument =>\r\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m  |\u001b[0mtype Argument is not a member of io.shiftleft.codepropertygraph.generated.nodes\r\n1 error found",
    "execution_time": 12.442521810531616
  },
  {
    "name": "Parameter to Return Flow",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres588\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List()\r\n",
    "execution_time": 12.421517372131348
  },
  {
    "name": "Local Variable Assignment Chains",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres589\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List(\n  Map(\n    \"identifier\" -> \"tuple\",\n    \"definedByParam\" -> \"tuple\",\n    \"paramType\" -> \"HeapTuple\",\n    \"atLine\" -> \"1557\"\n  )\n)\r\n",
    "execution_time": 12.46719217300415
  },
  {
    "name": "Variable Reassignment Chains",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres590\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List(\n  Map(\"sourceVar\" -> \"tid\", \"sourceLine\" -> \"1561\", \"targetVar\" -> \"tid\", \"targetLine\" -> \"1571\"),\n  Map(\n    \"sourceVar\" -> \"buffer\",\n    \"sourceLine\" -> \"1571\",\n    \"targetVar\" -> \"buffer\",\n    \"targetLine\" -> \"1576\"\n  ),\n  Map(\n    \"sourceVar\" -> \"relation\",\n    \"sourceLine\" -> \"1571\",\n    \"targetVar\" -> \"relation\",\n    \"targetLine\" -> \"1615\"\n  ),\n  Map(\"sourceVar\" -> \"tid\", \"sourceLine\" -> \"1571\", \"targetVar\" -> \"tid\", \"targetLine\" -> \"1583\")\n)\r\n",
    "execution_time": 12.408080816268921
  },
  {
    "name": "Call Argument Sources",
    "status": "success",
    "result": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: -------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m10 |\u001b[0m                    \u001b[31m\"sourceLine\"\u001b[0m -> source.property(\u001b[31m\"LINE_NUMBER\"\u001b[0m).map(_.toString).getOrElse(\u001b[31m\"unknown\"\u001b[0m)\r\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m   |\u001b[0mFound:    Null\r\n\u001b[31m   |\u001b[0mRequired: ?{ map: ? }\r\n\u001b[31m   |\u001b[0mNote that implicit conversions were not tried because the result of an implicit conversion\r\n\u001b[31m   |\u001b[0mmust be more specific than ?{ map: [applied to (_$1 => _$1.toString) returning ?{ getOrElse: [applied to (\r\n\u001b[31m   |\u001b[0m  \u001b[32m\"unknown\"\u001b[0m) returning Nothing] }] }\r\n\u001b[31m   |----------------------------------------------------------------------------\u001b[0m\r\n\u001b[31m   |\u001b[0m Explanation (enabled by `-explain`)\r\n\u001b[31m   |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\u001b[0m\r\n\u001b[31m   |\u001b[0m\r\n\u001b[31m   |\u001b[0m Tree: io.shiftleft.semanticcpg.language.gNodeToNodeMethods(source).property[\u001b[35mNull\u001b[0m](\r\n\u001b[31m   |\u001b[0m   \u001b[32m\"LINE_NUMBER\"\u001b[0m)\r\n\u001b[31m   |\u001b[0m I tried to show that\r\n\u001b[31m   |\u001b[0m   Null\r\n\u001b[31m   |\u001b[0m conforms to\r\n\u001b[31m   |\u001b[0m   ?{ map: ? }\r\n\u001b[31m   |\u001b[0m but none of the attempts shown below succeeded:\r\n\u001b[31m   |\u001b[0m\r\n\u001b[31m   |\u001b[0m   ==> Null  <:  ?{ map: ? }  = false\r\n\u001b[31m   |\u001b[0m\r\n\u001b[31m   |\u001b[0m The tests were made under a constraint with:\r\n\u001b[31m   |\u001b[0m  uninstantiated variables:\r\n\u001b[31m   |\u001b[0m  constrained types:\r\n\u001b[31m   |\u001b[0m   [B]\r\n\u001b[31m   |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.Call => IterableOnce[B])\r\n\u001b[31m   |\u001b[0m       : Iterator[B]\r\n\u001b[31m   |\u001b[0m   ,\r\n\u001b[31m   |\u001b[0m   [B]\r\n\u001b[31m   |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.Expression =>\r\n\u001b[31m   |\u001b[0m       IterableOnce[B]): Iterator[B]\r\n\u001b[31m   |\u001b[0m   ,\r\n\u001b[31m   |\u001b[0m   [B]\r\n\u001b[31m   |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.StoredNode => B):\r\n\u001b[31m   |\u001b[0m       Iterator[B]\r\n\u001b[31m   |\u001b[0m   ,\r\n\u001b[31m   |\u001b[0m [K, V](elems: (K, V)*): Map[K, V], [A](self: A): ArrowAssoc[A],\r\n\u001b[31m   |\u001b[0m   [B](y: B): (String, B)\r\n\u001b[31m   |\u001b[0m  bounds:\r\n\u001b[31m   |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m   |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m   |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m   |\u001b[0m      K >: String\r\n\u001b[31m   |\u001b[0m      V >: String\r\n\u001b[31m   |\u001b[0m      A >: (\u001b[32m\"sourceLine\"\u001b[0m : String)\r\n\u001b[31m   |\u001b[0m      B\r\n\u001b[31m   |\u001b[0m  ordering:\r\n\u001b[31m   |\u001b[0m      B <: B\r\n\u001b[31m   |\u001b[0m      B <: B\r\n\u001b[31m   |\u001b[0m      A <: K\r\n\u001b[31m   |\u001b[0m      B <: V\r\n\u001b[31m   |\u001b[0m  co-deps:\r\n\u001b[31m   |\u001b[0m      K --> B, B, B\r\n\u001b[31m   |\u001b[0m      V --> B, B, B\r\n\u001b[31m   |\u001b[0m  contra-deps:\r\n\u001b[31m   |\u001b[0m      K --> B, B, B\r\n\u001b[31m    ----------------------------------------------------------------------------\u001b[0m\r\n1 error found\r\n",
    "execution_time": 12.352551698684692
  },
  {
    "name": "Return Value Sources",
    "status": "success",
    "result": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: -------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m9 |\u001b[0m                \u001b[31m\"sourceLine\"\u001b[0m -> source.property(\u001b[31m\"LINE_NUMBER\"\u001b[0m).map(_.toString).getOrElse(\u001b[31m\"unknown\"\u001b[0m)\r\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m  |\u001b[0mFound:    Null\r\n\u001b[31m  |\u001b[0mRequired: ?{ map: ? }\r\n\u001b[31m  |\u001b[0mNote that implicit conversions were not tried because the result of an implicit conversion\r\n\u001b[31m  |\u001b[0mmust be more specific than ?{ map: [applied to (_$2 => _$2.toString) returning ?{ getOrElse: [applied to (\r\n\u001b[31m  |\u001b[0m  \u001b[32m\"unknown\"\u001b[0m) returning Nothing] }] }\r\n\u001b[31m  |-----------------------------------------------------------------------------\u001b[0m\r\n\u001b[31m  |\u001b[0m Explanation (enabled by `-explain`)\r\n\u001b[31m  |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\u001b[0m\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m Tree: io.shiftleft.semanticcpg.language.gNodeToNodeMethods(source).property[\u001b[35mNull\u001b[0m](\r\n\u001b[31m  |\u001b[0m   \u001b[32m\"LINE_NUMBER\"\u001b[0m)\r\n\u001b[31m  |\u001b[0m I tried to show that\r\n\u001b[31m  |\u001b[0m   Null\r\n\u001b[31m  |\u001b[0m conforms to\r\n\u001b[31m  |\u001b[0m   ?{ map: ? }\r\n\u001b[31m  |\u001b[0m but none of the attempts shown below succeeded:\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m   ==> Null  <:  ?{ map: ? }  = false\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m The tests were made under a constraint with:\r\n\u001b[31m  |\u001b[0m  uninstantiated variables:\r\n\u001b[31m  |\u001b[0m  constrained types:\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.Return => IterableOnce[B]\r\n\u001b[31m  |\u001b[0m       ): Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.StoredNode => B):\r\n\u001b[31m  |\u001b[0m       Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m [K, V](elems: (K, V)*): Map[K, V], [A](self: A): ArrowAssoc[A],\r\n\u001b[31m  |\u001b[0m   [B](y: B): (String, B)\r\n\u001b[31m  |\u001b[0m  bounds:\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      K >: String\r\n\u001b[31m  |\u001b[0m      V >: String\r\n\u001b[31m  |\u001b[0m      A >: (\u001b[32m\"sourceLine\"\u001b[0m : String)\r\n\u001b[31m  |\u001b[0m      B\r\n\u001b[31m  |\u001b[0m  ordering:\r\n\u001b[31m  |\u001b[0m      B <: B\r\n\u001b[31m  |\u001b[0m      A <: K\r\n\u001b[31m  |\u001b[0m      B <: V\r\n\u001b[31m  |\u001b[0m  co-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m  |\u001b[0m      V --> B, B\r\n\u001b[31m  |\u001b[0m  contra-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m   -----------------------------------------------------------------------------\u001b[0m\r\n1 error found\r\n",
    "execution_time": 12.373449087142944
  },
  {
    "name": "Control Structure Dependencies",
    "status": "success",
    "result": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: -------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m9 |\u001b[0m                \u001b[31m\"dependentLine\"\u001b[0m -> dependent.property(\u001b[31m\"LINE_NUMBER\"\u001b[0m).map(_.toString).getOrElse(\u001b[31m\"unknown\"\u001b[0m)\r\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m  |\u001b[0mFound:    Null\r\n\u001b[31m  |\u001b[0mRequired: ?{ map: ? }\r\n\u001b[31m  |\u001b[0mNote that implicit conversions were not tried because the result of an implicit conversion\r\n\u001b[31m  |\u001b[0mmust be more specific than ?{ map: [applied to (_$2 => _$2.toString) returning ?{ getOrElse: [applied to (\r\n\u001b[31m  |\u001b[0m  \u001b[32m\"unknown\"\u001b[0m) returning Nothing] }] }\r\n\u001b[31m  |-----------------------------------------------------------------------------\u001b[0m\r\n\u001b[31m  |\u001b[0m Explanation (enabled by `-explain`)\r\n\u001b[31m  |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\u001b[0m\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m Tree: io.shiftleft.semanticcpg.language.gNodeToNodeMethods(dependent).property[\u001b[35mNull\u001b[0m](\r\n\u001b[31m  |\u001b[0m   \u001b[32m\"LINE_NUMBER\"\u001b[0m)\r\n\u001b[31m  |\u001b[0m I tried to show that\r\n\u001b[31m  |\u001b[0m   Null\r\n\u001b[31m  |\u001b[0m conforms to\r\n\u001b[31m  |\u001b[0m   ?{ map: ? }\r\n\u001b[31m  |\u001b[0m but none of the attempts shown below succeeded:\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m   ==> Null  <:  ?{ map: ? }  = false\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m The tests were made under a constraint with:\r\n\u001b[31m  |\u001b[0m  uninstantiated variables:\r\n\u001b[31m  |\u001b[0m  constrained types:\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.ControlStructure =>\r\n\u001b[31m  |\u001b[0m       IterableOnce[B]): Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.StoredNode => B):\r\n\u001b[31m  |\u001b[0m       Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m [K, V](elems: (K, V)*): Map[K, V], [A](self: A): ArrowAssoc[A],\r\n\u001b[31m  |\u001b[0m   [B](y: B): (String, B)\r\n\u001b[31m  |\u001b[0m  bounds:\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      K >: String\r\n\u001b[31m  |\u001b[0m      V >: String\r\n\u001b[31m  |\u001b[0m      A >: (\u001b[32m\"dependentLine\"\u001b[0m : String)\r\n\u001b[31m  |\u001b[0m      B\r\n\u001b[31m  |\u001b[0m  ordering:\r\n\u001b[31m  |\u001b[0m      B <: B\r\n\u001b[31m  |\u001b[0m      A <: K\r\n\u001b[31m  |\u001b[0m      B <: V\r\n\u001b[31m  |\u001b[0m  co-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m  |\u001b[0m      V --> B, B\r\n\u001b[31m  |\u001b[0m  contra-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m   -----------------------------------------------------------------------------\u001b[0m\r\n1 error found\r\n",
    "execution_time": 12.346004962921143
  },
  {
    "name": "Field Access Data Flow",
    "status": "success",
    "result": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: -------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m8 |\u001b[0m                \u001b[31m\"sourceLine\"\u001b[0m -> source.property(\u001b[31m\"LINE_NUMBER\"\u001b[0m).map(_.toString).getOrElse(\u001b[31m\"unknown\"\u001b[0m)\r\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m  |\u001b[0mFound:    Null\r\n\u001b[31m  |\u001b[0mRequired: ?{ map: ? }\r\n\u001b[31m  |\u001b[0mNote that implicit conversions were not tried because the result of an implicit conversion\r\n\u001b[31m  |\u001b[0mmust be more specific than ?{ map: [applied to (_$2 => _$2.toString) returning ?{ getOrElse: [applied to (\r\n\u001b[31m  |\u001b[0m  \u001b[32m\"unknown\"\u001b[0m) returning Nothing] }] }\r\n\u001b[31m  |-----------------------------------------------------------------------------\u001b[0m\r\n\u001b[31m  |\u001b[0m Explanation (enabled by `-explain`)\r\n\u001b[31m  |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\u001b[0m\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m Tree: io.shiftleft.semanticcpg.language.gNodeToNodeMethods(source).property[\u001b[35mNull\u001b[0m](\r\n\u001b[31m  |\u001b[0m   \u001b[32m\"LINE_NUMBER\"\u001b[0m)\r\n\u001b[31m  |\u001b[0m I tried to show that\r\n\u001b[31m  |\u001b[0m   Null\r\n\u001b[31m  |\u001b[0m conforms to\r\n\u001b[31m  |\u001b[0m   ?{ map: ? }\r\n\u001b[31m  |\u001b[0m but none of the attempts shown below succeeded:\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m   ==> Null  <:  ?{ map: ? }  = false\r\n\u001b[31m  |\u001b[0m\r\n\u001b[31m  |\u001b[0m The tests were made under a constraint with:\r\n\u001b[31m  |\u001b[0m  uninstantiated variables:\r\n\u001b[31m  |\u001b[0m  constrained types:\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.Call => IterableOnce[B])\r\n\u001b[31m  |\u001b[0m       : Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m   [B]\r\n\u001b[31m  |\u001b[0m     (f: io.shiftleft.codepropertygraph.generated.nodes.StoredNode => B):\r\n\u001b[31m  |\u001b[0m       Iterator[B]\r\n\u001b[31m  |\u001b[0m   ,\r\n\u001b[31m  |\u001b[0m [K, V](elems: (K, V)*): Map[K, V], [A](self: A): ArrowAssoc[A],\r\n\u001b[31m  |\u001b[0m   [B](y: B): (String, B)\r\n\u001b[31m  |\u001b[0m  bounds:\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      B >: Map[String, String]\r\n\u001b[31m  |\u001b[0m      K >: String\r\n\u001b[31m  |\u001b[0m      V >: String\r\n\u001b[31m  |\u001b[0m      A >: (\u001b[32m\"sourceLine\"\u001b[0m : String)\r\n\u001b[31m  |\u001b[0m      B\r\n\u001b[31m  |\u001b[0m  ordering:\r\n\u001b[31m  |\u001b[0m      B <: B\r\n\u001b[31m  |\u001b[0m      A <: K\r\n\u001b[31m  |\u001b[0m      B <: V\r\n\u001b[31m  |\u001b[0m  co-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m  |\u001b[0m      V --> B, B\r\n\u001b[31m  |\u001b[0m  contra-deps:\r\n\u001b[31m  |\u001b[0m      K --> B, B\r\n\u001b[31m   -----------------------------------------------------------------------------\u001b[0m\r\n1 error found\r\n",
    "execution_time": 12.340313196182251
  },
  {
    "name": "Parameter to Call to Return Chain",
    "status": "failed",
    "error": "\u001b[31m\u001b[31m-- [E008] Not Found Error: -----------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[31m4 |\u001b[0m            \u001b[33mcase\u001b[0m arg: io.shiftleft.codepropertygraph.generated.nodes.Argument =>\r\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\r\n\u001b[31m  |\u001b[0mtype Argument is not a member of io.shiftleft.codepropertygraph.generated.nodes\r\n1 error found",
    "execution_time": 12.463072776794434
  },
  {
    "name": "DDG Edge Statistics",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres591\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List(\n  HashMap(\n    \"methodName\" -> \"heap_fetch\",\n    \"identifiers\" -> \"61\",\n    \"returns\" -> \"4\",\n    \"totalReachingDefEdges\" -> \"425\",\n    \"parameters\" -> \"5\",\n    \"calls\" -> \"98\",\n    \"totalCdgEdges\" -> \"185\"\n  )\n)\r\n",
    "execution_time": 12.380557537078857
  },
  {
    "name": "DDG Target Node Types",
    "status": "success",
    "result": "\u001b[33mval\u001b[0m \u001b[36mres592\u001b[0m: \u001b[32mList\u001b[0m[\u001b[32mMap\u001b[0m[\u001b[32mString\u001b[0m, \u001b[32mString\u001b[0m]] = List(\n  Map(\"nodeType\" -> \"IDENTIFIER\", \"count\" -> \"14\"),\n  Map(\"nodeType\" -> \"METHOD_PARAMETER_OUT\", \"count\" -> \"9\"),\n  Map(\"nodeType\" -> \"CALL\", \"count\" -> \"1\"),\n  Map(\"nodeType\" -> \"METHOD_RETURN\", \"count\" -> \"4\")\n)\r\n",
    "execution_time": 12.361985445022583
  }
]